{"version":3,"sources":["components/CartIcon.module.css","components/Meal.module.css","components/CartConfirm.module.css","components/CartButton.module.css","Modal.module.css","components/Body.module.css","components/BodyDescription.module.css","components/MealsContainer.module.css","components/MealsList.module.css","Modal.js","components/CartIcon.js","cart-context.js","components/OrderConfirm.js","components/CartConfirm.js","components/CartButton.js","components/Hello.js","components/Header.js","components/BodyDescription.js","components/Meal.js","components/MealsList.js","components/MealsContainer.js","components/Body.js","CartProvider.js","App.js","index.js"],"names":["module","exports","Modal","props","modalDiv","className","classes","onClick","e","target","toLowerCase","includes","closeModal","children","ReactDOM","createPortal","document","getElementById","cartIcon","xmlns","width","height","viewBox","g","d1","d","d2","circle1","cx","cy","r","circle2","CartContext","React","createContext","items","amount","addNewItem","item","deleteItem","id","clearCart","OrderConfirm","jsx","useState","isNameValid","isStreetValid","isCityValid","isPinValid","isValid","setIsValid","refName","useRef","refStreet","refLocality","refCity","refPIN","orderPlaced","setOrderPlaced","onCancelHandler","useContext","preventDefault","htmlFor","ref","valName","current","value","valStreet","valLocality","valCity","valPIN","console","log","confirmOrder","userName","street","locality","city","pin","Fragment","CartConfirm","error","setError","orderConfirmed","setOrderConfirmed","cartCtx","increementHandler","quantity","decreementHandler","onCloseHandler","onOrderConfirmHandler","userData","fetch","method","body","JSON","stringify","orderItems","userDetails","headers","postData","Error","ok","status","message","length","map","el","mealName","price","bind","mealId","CartButton","showModal","setShowModal","totalItems","reduce","prev","curr","useEffect","addEventListener","key","ModalComp","CartIcon","Hello","state","custName","handleClick","this","Component","Header","BodyDescription","Meal","setQuantity","refQuantity","description","onSubmit","for","type","name","min","max","step","onChange","MealsList","mealItems","setMealItems","response","json","data","newList","Object","keys","forEach","newObj","push","fetchData","mealJsx","element","MealsContainer","Body","src","alt","nullCart","cartReducer","action","updatedItems","updatedTotal","itemIndex","findIndex","splice","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","createRoot","render"],"mappings":"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","file":"static/js/main.4aa98f75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"g\":\"CartIcon_g__2_u0U\",\"d1\":\"CartIcon_d1__2mu50\",\"d2\":\"CartIcon_d2__3k7uU\",\"circle1\":\"CartIcon_circle1__2b0l1\",\"circle2\":\"CartIcon_circle2__o-aJl\",\"d3\":\"CartIcon_d3__3Zjhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"Meal_meals__3cyLJ\",\"input-form\":\"Meal_input-form__29pIV\",\"form-button\":\"Meal_form-button___DMFC\",\"form-quantity\":\"Meal_form-quantity__2Lgx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unordered-list\":\"CartConfirm_unordered-list__3hcTu\",\"list-item\":\"CartConfirm_list-item__37rDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-button\":\"CartButton_cart-button__3EOUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"Modal_modal-overlay__2TiFU\",\"modal-class\":\"Modal_modal-class__15SWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body-class\":\"Body_body-class__17qND\",\"background-image\":\"Body_background-image__2Xqey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body-description\":\"BodyDescription_body-description__CCI1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals-container\":\"MealsContainer_meals-container__imsxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-error\":\"MealsList_message-error__2zvLR\",\"message-success\":\"MealsList_message-success__OhTa7\"};","import classes from './Modal.module.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from 'react';\r\n\r\n// const modalContainer = ReactDOM.createPortal (Modal,document.getElementById('modal-container'));\r\n\r\nconst Modal = (props) => {\r\n\r\n    const handleOverlayOnClick = (e) => {\r\n        if(e.target?.className.toLowerCase().includes('overlay')) props.closeModal();\r\n    }\r\n\r\n    const modalDiv = (\r\n        <div className={classes[\"modal-overlay\"]} onClick={handleOverlayOnClick}>\r\n            <div className={classes[\"modal-class\"]} closeModal={props.closeModal}> \r\n                {props.children} \r\n            </div>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal ( modalDiv , document.getElementById('modal-container'));\r\n}\r\n\r\nexport default Modal;","import classes from './CartIcon.module.css';\r\nconst cartIcon = () => {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" \r\n            // xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"\r\n            // width=\"256\" height=\"256\" viewBox=\"0 0 256 256\" \r\n            width=\"50\" height=\"50\" viewBox=\"10 00 100 100\" \r\n            // xml:space=\"preserve\"\r\n            >\r\n\r\n            <defs>\r\n            </defs>\r\n            <g className={classes.g}>\r\n                <path className={classes.d1} d=\"M 24.158 57.596 h 54.898 c 2.293 0 4.313 -1.509 4.964 -3.709 l 5.841 -19.759 c 0.633 -2.141 -0.972 -4.289 -3.204 -4.289 H 16.95 L 24.158 57.596 z\"/>\r\n                <path className={classes.d2} d=\"M 79.585 70.399 H 27.091 c -0.687 0 -1.287 -0.464 -1.46 -1.129 L 14.404 26.034 c -0.421 -1.62 -1.883 -2.751 -3.557 -2.751 H 1.508 C 0.675 23.283 0 22.608 0 21.775 s 0.675 -1.508 1.508 -1.508 h 9.339 c 3.048 0 5.711 2.06 6.476 5.01 l 10.935 42.106 h 51.327 c 0.833 0 1.508 0.676 1.508 1.508 C 81.093 69.724 80.417 70.399 79.585 70.399 z\" />\r\n                <circle className={classes.circle1} cx=\"36.176\" cy=\"80.946\" r=\"6.536\"/>\r\n                <circle className={classes.circle2} cx=\"69.15599999999999\" cy=\"80.946\" r=\"6.536\" />\r\n                <path d=\"M 43.198 35.321 c -0.57 0 -1.137 -0.179 -1.621 -0.53 c -0.856 -0.623 -1.277 -1.657 -1.098 -2.7 l 1.379 -8.044 c 0.042 -0.247 -0.039 -0.498 -0.218 -0.673 l -5.845 -5.697 c -0.758 -0.739 -1.025 -1.823 -0.698 -2.83 s 1.181 -1.727 2.228 -1.879 l 8.077 -1.173 c 0.248 -0.036 0.462 -0.191 0.572 -0.416 l 3.613 -7.319 c 0.468 -0.949 1.416 -1.539 2.476 -1.539 c 1.059 0 2.007 0.59 2.475 1.539 l 3.612 7.319 c 0.111 0.224 0.325 0.38 0.573 0.416 l 8.076 1.173 c 1.048 0.152 1.901 0.873 2.228 1.879 c 0.327 1.007 0.06 2.091 -0.698 2.831 l -5.844 5.696 c -0.18 0.175 -0.262 0.427 -0.22 0.674 l 1.38 8.043 c 0.179 1.044 -0.242 2.078 -1.099 2.7 c -0.855 0.622 -1.971 0.702 -2.906 0.21 l -7.225 -3.798 c -0.222 -0.118 -0.486 -0.116 -0.707 0 l -7.225 3.798 C 44.077 35.215 43.636 35.321 43.198 35.321 z\" />\r\n            </g>\r\n        </svg>\r\n\t)\r\n\r\n}\r\nexport default cartIcon;","import React from 'react';\r\n\r\nconst CartContext = React.createContext (\r\n    {\r\n        items : [],\r\n        amount : 0,\r\n        addNewItem (item) {},\r\n        deleteItem (id) {},\r\n        clearCart () {}\r\n    }\r\n);\r\n\r\nexport default CartContext;","import classes from './OrderConfirm.module.css';\r\nimport React, {useState, useContext, useRef} from 'react';\r\nimport CartContext from '../cart-context';\r\n\r\nconst OrderConfirm = (props) => {\r\n\r\n    const [isValid, setIsValid] = useState({\r\n        isNameValid: true,\r\n        isStreetValid: true,\r\n        isCityValid: true,\r\n        isPinValid: true,\r\n    });\r\n\r\n    // const [isValid, setIsValid] = useState(false);\r\n\r\n    const refName = useRef('');\r\n    const refStreet = useRef('');\r\n    const refLocality = useRef('');\r\n    const refCity = useRef('');\r\n    const refPIN = useRef('');\r\n\r\n    const [orderPlaced, setOrderPlaced] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const onCancelHandler = (e) => {\r\n        e.preventDefault();\r\n        props.closeModal();\r\n        setOrderPlaced(false);\r\n    }\r\n    const onConfirmHandler = (e) => {\r\n        e.preventDefault();\r\n        const valName = refName.current.value;\r\n        const valStreet = refStreet.current.value;\r\n        const valLocality = refLocality.current.value;\r\n        const valCity = refCity.current.value;\r\n        const valPIN = refPIN.current.value;\r\n        console.log(valName, valStreet, valCity, valPIN);\r\n\r\n        if (!valName || !valStreet || !valCity || !valPIN){\r\n            setIsValid({\r\n                isNameValid: valName,\r\n                isStreetValid: valStreet,\r\n                isCityValid: valCity,\r\n                isPinValid: valPIN,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(valName && valStreet && valCity && valPIN) {\r\n            console.log(\"Order Placed...\");\r\n\r\n            props.confirmOrder({\r\n                userName: valName,\r\n                street : valStreet,\r\n                locality : valLocality,\r\n                city : valCity,\r\n                pin : valPIN,\r\n            });\r\n            // cartCtx.clearCart();\r\n\r\n            // setOrderPlaced(true);\r\n        }\r\n\r\n    }\r\n\r\n    let jsx;\r\n    if (!orderPlaced){\r\n        jsx = (\r\n        <div>\r\n            <span>Please provide address details!</span>\r\n            \r\n            <form>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" ref={refName}></input>\r\n                    {!isValid.isNameValid && <p>Enter a valid Name</p>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"street\" >Street</label>\r\n                    <input id=\"street\" ref={refStreet}></input>\r\n                    {!isValid.isStreetValid && <p>Enter a valid Street</p>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"locality\">Locality</label>\r\n                    <input id=\"locality\" ref={refLocality}></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"city\" >City</label>\r\n                    <input id=\"city\" ref={refCity}></input>\r\n                    {!isValid.isCityValid && <p>Enter a valid City</p>}\r\n\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"pin-code\" >Pin Code</label>\r\n                    <input id=\"pin-code\" ref={refPIN}></input>\r\n                    {!isValid.isPinValid && <p>Enter a valid PIN</p>}\r\n\r\n                </div>\r\n                <div>\r\n                    <button onClick={onConfirmHandler}>Confirm</button>\r\n                    <button onClick={onCancelHandler}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>);\r\n    }\r\n    else if (orderPlaced){\r\n        jsx = (\r\n        <div>\r\n            <span>Order Placed!</span>   \r\n            <button onClick={onCancelHandler}>Close</button>         \r\n        </div>);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {jsx}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OrderConfirm;","import React, {useContext, useState} from 'react';\r\nimport CartContext from '../cart-context';\r\nimport classes from './CartConfirm.module.css';\r\n\r\nimport OrderConfirm from './OrderConfirm';\r\n\r\nconst CartConfirm = (props) => {\r\n    const [error, setError] = useState('');\r\n    const [orderConfirmed, setOrderConfirmed] = useState(false);\r\n    const [orderPlaced, setOrderPlaced] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const increementHandler = (item) => {\r\n        cartCtx.addNewItem({...item, quantity:1});\r\n    }\r\n\r\n    const decreementHandler = (id) => {\r\n        cartCtx.deleteItem(id);\r\n    }\r\n\r\n    const onPlaceOrderHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Confirm your Address...\");\r\n        // cartCtx.clearCart();\r\n        setOrderConfirmed(true);\r\n    }\r\n    const onCloseHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('Close modal');\r\n        props.closeModal();\r\n    }\r\n    const onOrderConfirmHandler = async (userData) => {\r\n        // e.preventDefault();\r\n\r\n        try {\r\n\r\n            const postData = await (fetch ('https://react-http-134bb-default-rtdb.firebaseio.com/orders.json', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    orderItems : cartCtx.items,\r\n                    userDetails : userData\r\n                }),\r\n                headers: {\r\n                    'content' : 'application/JSON',\r\n                }\r\n            }))\r\n            if(!postData) {\r\n                console.log('No Response');\r\n                throw new Error('No Response from the server');\r\n            }\r\n            console.log(postData);\r\n            if(postData.ok && postData.status === 200) {\r\n                setOrderPlaced(true);\r\n            }\r\n            else if(postData) {\r\n                throw new Error(postData.status);\r\n            }\r\n            else {\r\n                throw new Error('No Response');\r\n            }\r\n        }catch (err) {\r\n            console.error(err);\r\n            console.log(err.message);\r\n            setError(err);\r\n        }\r\n    }\r\n    console.log(error);\r\n\r\n    if (error){\r\n        return (\r\n            <React.Fragment>\r\n                <span>Error</span><br></br>\r\n                <span>{error.message}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else if(!orderConfirmed && cartCtx.items.length === 0){\r\n        return (\r\n            <React.Fragment>\r\n                <span>You don't have any items in your cart!</span>\r\n                <button onClick={onCloseHandler}>\r\n                                Close\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else if (orderConfirmed){\r\n        return (\r\n            <React.Fragment>\r\n                <OrderConfirm confirmOrder={onOrderConfirmHandler} closeModal={props.closeModal}></OrderConfirm>             \r\n            </React.Fragment>\r\n        );\r\n    } \r\n    else if(orderPlaced) {\r\n        return (\r\n            <React.Fragment>\r\n                <span>Your Order has been placed!</span>\r\n                <span>Thanks!!</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment>            \r\n                <div>            \r\n                    <ul className={classes[\"unordered-list\"]}>\r\n                        {cartCtx.items.map((el) => {\r\n                            return(\r\n                            <li className={classes[\"list-item\"]} key={el.mealId}>\r\n                                <div className={classes[\"meal-name\"]}>\r\n                                    <span>{el.mealName}</span>\r\n                                    <span>₹{el.quantity*el.price}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>X{el.quantity}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <button onClick={increementHandler.bind(null, el)}>+</button>\r\n                                    <button onClick={decreementHandler.bind(null, el.mealId)}>-</button>\r\n                                </div>\r\n                            </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <span>Total Amount: </span>\r\n                    <span>{cartCtx.amount}</span>\r\n                </div>\r\n                <div>\r\n                        <button onClick={onPlaceOrderHandler}>\r\n                            Order\r\n                        </button>\r\n                        <button onClick={onCloseHandler}>\r\n                            Close\r\n                        </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartConfirm;","import classes from './CartButton.module.css';\r\nimport Modal from '../Modal';\r\nimport CartIcon from './CartIcon';\r\nimport CartContext from '../cart-context';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport CartConfirm from './CartConfirm';\r\n\r\nconst CartButton = (props) => {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n    \r\n    let totalItems = cartCtx.items.reduce((prev, curr) => {\r\n        return prev+curr.quantity;\r\n    },0);\r\n\r\n    const { items } = cartCtx;\r\n    // console.log(cartCtx);\r\n\r\n    // useEffect(() => {\r\n    //     totalItems = cartCtx.items.reduce((prev, curr) => {\r\n    //         return prev+curr.quantity;\r\n    //     },0);\r\n    // },[items]);\r\n\r\n    \r\n\r\n    const openModal = function() {\r\n        setShowModal(true);\r\n    }\r\n    const closeModal = function() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    useEffect (() => {        \r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if(e.key === 'Escape') {\r\n                closeModal();\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const ModalComp = <Modal closeModal={closeModal}>\r\n        <CartConfirm cartCtx={cartCtx} closeModal={closeModal}></CartConfirm>\r\n    </Modal>\r\n\r\n    return (\r\n        <div className={classes[\"cart-button\"]}>\r\n            {/* <img src=\"react-meals/public/shopping-cart-icon.png\" alt=\"Shopping Cart Icon\"/> */}\r\n            <CartIcon/>\r\n            Your Cart \r\n            <button className={classes[\"badge\"]} onClick={openModal}>{totalItems}</button>   \r\n            {/* {showModal && <Modal closeModal={closeModal}/>}              */}\r\n            {showModal && ModalComp}             \r\n        </div>\r\n    )\r\n}\r\nexport default CartButton;","\r\nimport React from 'react';\r\n\r\nclass Hello extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            custName : props.custName\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(){\r\n        console.log(`Hello ${this.state.custName}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.handleClick}>Click Me</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hello;","import classes from './Header.module.css';\r\nimport CartButton from './CartButton';\r\nimport Hello from './Hello';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header>\r\n            ReactMeals\r\n            <Hello custName=\"Sai\"></Hello>\r\n            <CartButton ></CartButton>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import classes from './BodyDescription.module.css';\r\n\r\nconst BodyDescription = () => {\r\n\r\n    return (\r\n        \r\n    <div className={classes[\"body-description\"]}>\r\n        <h3>Delicious Food, Delivered to you</h3>\r\n        <span>\r\n        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n        </span>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default BodyDescription;\r\n","import classes from './Meal.module.css';\r\nimport CartContext from '../cart-context';\r\n\r\nimport { useRef, useState, useContext } from 'react';\r\nconst Meal = (props) => {\r\n    const [quantity, setQuantity] = useState (0)\r\n    const cartCtx = useContext(CartContext);\r\n    const refQuantity = useRef(0);\r\n\r\n    const quantityValue = refQuantity.current.value;\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        if(quantity>0) {\r\n                cartCtx.addNewItem({\r\n                    mealId: props.mealId, \r\n                    mealName: props.mealName, \r\n                    price: props.price, \r\n                    quantity: +quantity}); \r\n                refQuantity.current.value=0;\r\n            }\r\n\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Form Submitted!!\")\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setQuantity(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"meals\"]}>\r\n            <div>\r\n                <span>{props.mealName}</span><br/>\r\n                <span>{props.description}</span><br/>\r\n                <span>₹ {props.price}</span>\r\n            </div>            \r\n            <form className={classes[\"input-form\"]} onSubmit={onSubmitHandler}>\r\n                {/* <div> */}\r\n                    <label for={props.mealName}>Quantity</label>\r\n                    <input className={classes[\"form-quantity\"]} type=\"number\" name={props.mealName} min=\"0\" max=\"10\" step=\"1\" value={quantity} onChange={onChangeHandler} />\r\n                {/* </div> */}\r\n                    <input className={classes[\"form-button\"]} type=\"submit\" value=\"Add\" onClick={onClickHandler}/>\r\n                    \r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Meal;","import Meal from './Meal';\r\nimport classes from './MealsList.module.css';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst itemList = [\r\n    {\r\n        mealId : '01',\r\n        mealName : \"Idli\",\r\n        description : \"Healthy Snack\",\r\n        price : 20\r\n    },\r\n    {\r\n        mealId : '02',\r\n        mealName : \"Dosa\",\r\n        description : \"Crunchy Snack\",\r\n        price : 50\r\n    }\r\n]\r\n\r\n\r\nconst MealsList = () => {\r\n    const [error, setError] = useState('');\r\n    const [mealItems, setMealItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n                \r\n            try {\r\n                \r\n                console.log(\"useEffect Running!!\");\r\n                const response = await fetch ('https://react-http-134bb-default-rtdb.firebaseio.com/meals.json',{\r\n                    method : 'GET',\r\n                    body : null,\r\n                    headers : {\r\n                        'context-type' : 'application/json'\r\n                    },\r\n                });\r\n                console.log(response);\r\n                if (!response.ok){\r\n                    console.log(\"Fetch error : Invalid response!\");\r\n                    throw new Error (\"Fetch error : Invalid response!\");\r\n                }\r\n                const data = await response.json();\r\n                console.log(data);\r\n                if (!data || data?.length === 0) throw new Error(\"No meals found!!\");\r\n                // console.log(data);\r\n                const newList = [];\r\n                Object.keys(data).forEach((key) => {\r\n                    // console.log({mealId: key, ...data[key] , mealName: data[key].name});\r\n                    const newObj  = {mealId: key, mealName: data[key].name, ...data[key]}\r\n                    delete newObj.name;\r\n                    newList.push(newObj);    \r\n                });\r\n                setMealItems(newList); \r\n            } catch (e) {            \r\n                console.log(e.message);\r\n                console.error(e.message);\r\n                setError(e.message);\r\n                // return err.message;\r\n            }   \r\n        }\r\n            \r\n        fetchData();\r\n        \r\n\r\n    },[])\r\n\r\n    const mealJsx = mealItems.map((element) => {\r\n        // return <Meal key={Math.round(Math.random()*1000)} mealId={element.mealId} mealName={element.mealName} description={element.description} price={element.price} />\r\n        return <Meal key={element.mealId} mealId={element.mealId} mealName={element.mealName} description={element.description} price={element.price} />\r\n    })\r\n\r\n\r\n    if (error){\r\n        return <span className={classes[\"message-error\"]}>{`Fetch Error : ${error}`}</span>;\r\n    }  \r\n    else if (!error && mealItems.length === 0) {\r\n        return <span>Loading...</span>;\r\n    }\r\n    else if (!error && mealItems.length > 0) {\r\n        return mealJsx;\r\n    }\r\n    \r\n}\r\n\r\nexport default MealsList;","import classes from './MealsContainer.module.css';\r\nimport MealsList from './MealsList';\r\nconst MealsContainer = () => {\r\n    return (\r\n        <div className={classes[\"meals-container\"]}>            \r\n            <MealsList></MealsList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MealsContainer;","import classes from './Body.module.css';\r\nimport BodyDescription from './BodyDescription';\r\nimport MealsContainer from './MealsContainer';\r\nconst Body = () => {\r\n\r\n    return <div className={classes[\"body-class\"]}>\r\n        <img className={classes[\"background-image\"]} src=\"https://www.foodiesfeed.com/wp-content/uploads/2021/02/breakfast-and-berries.jpg\" alt=\"Background\" />\r\n        <BodyDescription></BodyDescription>\r\n        <MealsContainer></MealsContainer>\r\n    </div>\r\n}\r\n\r\nexport default Body;\r\n\r\n","import React, {useReducer} from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst nullCart = {\r\n    items : [],\r\n    amount : 0,  \r\n};\r\n\r\n\r\n\r\nconst cartReducer = (state, action) => {\r\n    let updatedItems;\r\n    let updatedTotal;\r\n    switch (action.type) {        \r\n        case 'ADD' : {\r\n            updatedItems = [...state.items];\r\n            const itemIndex = state.items.findIndex(element =>element.mealName === action.item.mealName);\r\n\r\n            if ( itemIndex < 0) {\r\n                updatedItems.push({\r\n                    mealId:action.item.mealId, \r\n                    mealName:action.item.mealName, \r\n                    price: action.item.price, \r\n                    quantity:action.item.quantity\r\n                });\r\n                updatedTotal = state.amount + action.item.quantity * action.item.price;\r\n            }else{\r\n                updatedItems[itemIndex].quantity += action.item.quantity;\r\n                updatedTotal = state.amount + action.item.quantity * action.item.price;\r\n            }\r\n            return ({\r\n                items: updatedItems,\r\n                amount: updatedTotal\r\n            });\r\n        }\r\n        case 'DELETE' : {\r\n            updatedItems = [...state.items];\r\n            const itemIndex = updatedItems.findIndex(el => el.mealId === action.id)\r\n            if (itemIndex<0) return;\r\n            updatedTotal = state.amount - updatedItems[itemIndex].price;\r\n            if(updatedTotal === 0) return ({ items: [], amount: 0 });\r\n\r\n            if (updatedItems[itemIndex]?.quantity === 1){\r\n                updatedItems.splice(itemIndex, 1);\r\n                return ({\r\n                    items: updatedItems,\r\n                    amount: updatedTotal\r\n                })\r\n            } \r\n            if (updatedItems[itemIndex]?.quantity > 1) {\r\n                updatedItems[itemIndex].quantity-=1;\r\n                return ({\r\n                    items: updatedItems,\r\n                    amount: updatedTotal\r\n                })\r\n            }\r\n            return ({\r\n                items: updatedItems,\r\n                amount: updatedTotal\r\n            })\r\n        }\r\n        case 'CLEARALL' : {\r\n            return {\r\n                items: [],\r\n                amount: 0\r\n            }\r\n        }\r\n        default : {\r\n            return {\r\n                items: [],\r\n                amount: 0\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, nullCart);\r\n\r\n    const addNewItemHandler = (item) => {\r\n        dispatchCartAction({type : 'ADD', item: item});\r\n    }\r\n    const deleteItemHandler = (mealId) => {\r\n        dispatchCartAction({type : 'DELETE', id : mealId});\r\n    }\r\n    const clearCartHandler = () => {\r\n        dispatchCartAction({type : 'CLEARALL'});\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        amount: cartState.amount,\r\n        addNewItem: addNewItemHandler,\r\n        deleteItem: deleteItemHandler,\r\n        clearCart: clearCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n        \r\n}\r\n\r\nexport default CartProvider;","// import TodoList from './components/TodoList';\r\nimport Header from './components/Header';\r\nimport Body from './components/Body';\r\nimport CartProvider from './CartProvider';\r\n\r\nimport Counter from './components/Counter';\r\n\r\n\r\n// const modalContainer = ReactDOM.createPortal (Modal,document.getElementById('modal-container'));\r\n\r\nconst nullCart = {\r\n  items: [],\r\n  amount: 0\r\n};\r\n\r\nfunction App() {\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      \r\n      {/* <Counter></Counter> */}\r\n      <CartProvider>\r\n        <Header >\r\n\r\n        </Header>\r\n        <Body>\r\n\r\n        </Body>\r\n      </CartProvider>\r\n      \r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n\r\n"],"sourceRoot":""}